#!/bin/bash
#
# clustercheck	This script starts/stops the clustercheck.py daemon
#
# chkconfig: 345 00 90
# description: clustercheck.py is a script to allow clients to check the \
# 		health status of nodes in a percona cluster
#
# processname: /usr/sbin/clustercheck.py
# config: /etc/sysconfig/clustercheck


### BEGIN INIT INFO
# Provides: 
# Required-Start: $network $mysql
# Required-Stop: 
# Should-Start: 
# Should-Stop: 
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: start and stop clustercheck.py
# Description: clustercheck.py is a script to allow clients to check the \
# 		health status of nodes in a percona cluster
### END INIT INFO

PATH=/sbin:/bin:/usr/bin:/usr/sbin

# Source function library.
. /etc/init.d/functions

# Get config
test -f /etc/sysconfig/clustercheck && . /etc/sysconfig/percona-python-clustercheck

RETVAL=0

prog="clustercheck"
exec=`type clustercheck | awk '{print $3}'`
pidfile="/var/run/$prog.pid"
lockfile="/var/lock/subsys/$prog"
args="/etc/sysconfig/clustercheck"

start(){
    [ -x $exec ] || exit 5
    [ -f $args ] && . $args || exit 6
    #build the command based on optional arguments 
    cmd="$exec"
    [ -z "${AWD}" ] || cmd+=" -a"
    [ $DWRO == true ] || cmd+=" -r"
    [ -z "${CACHE}" ] || cmd+=" c ${CACHE}"
    [ -z "${CNF}" ] || cmd+=" -f ${CNF}"
    [ -z "${PORT}" ] || cmd+=" -p ${PORT}"
    [ $IPV6 == true && -z "${IPV4}" ] || cmd+=" -6"
    [ -z "${IPV4}" ] || cmd+=" -4 ${IPV4}"
    daemon --prodfile $pidfilr "$cmd &>/dev/null & echo \$! > $pidfile"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop(){
    echo -n $"Stopping $prog: "
    killproc -p $pidfile $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart(){
    stop
    start
}

clu_status(){
    if [ -e /var/lock/subsys/clustercheck ] ; then
        if [ -e $pid ]; then
            p=`cat $pid`
            echo "$prog ($p) is running"
        else
            echo "$prog is locked but dead"
        fi
    else 
        echo "$prog is not running"
    fi
    RETVAL=0
}

condrestart(){
    if [ -e /var/lock/subsys/clustercheck ] ; then
        restart
        RETVAL=$?
        return $RETVAL
    fi
    RETVAL=0
    return $RETVAL
}


# See how we were called.
case "$1" in
    start)
	start
	RETVAL=$?
	;;
    stop)
	stop
	RETVAL=$?
	;;
    status)
	clu_status
	RETVAL=$?
	;;
    restart)
	restart
	RETVAL=$?
	;;
    condrestart|try-restart)
	condrestart
	RETVAL=$?
	;;
    *)
	echo $"Usage: $0 {start|stop|status|restart|condrestart}"
	RETVAL=2
esac

exit $RETVAL
